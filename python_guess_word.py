# -*- coding: utf-8 -*-
"""Python Guess Word

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1EUcGU6qMs2AV5EmxMbKwWC4GMpIciMu7

# Project Guess the word - Python String Operation

---

---

### Problem Statement 

In this project, you have to write a computer program to create an interactive game application called **Guess the Word**. The game must have the following major components:

1. A repository of English words.

2. A function to jumble the letters of the English words. 

3. Display a word such that its letters are jumbled, its part of speech and its meaning. Then prompt the player to guess the word one-by-one.  

6. Check whether the player had guessed the correct word.

7. Keep a count of the player's correct guesses.

---

---

### Project Requirements

1. Create the `my_words` tuple which should contain the following 10 words,

<img src='https://student-datasets-bucket.s3.ap-south-1.amazonaws.com/images/project10_words_list.png'>

2. Create the `score` variable with initial value as `0`, to store the counts of the player's guess.

2. Create the `shuffler()` function which returns a string having jumbled letters of a word.

4. Create a `for` to run the game.

5. Once the player has completed guessing all the words, display `Game Over!` message along with the final score.
  ```
  Game Over!
  Kakashi, Your score is 6.
  ```

---

#### 1. Words & Score

- Create the `my_words` tuple containing the given 10 words,
    ```
    my_words = ('questionnaire', 'unconscious', 'precocious', 'liaison', 'surveillance', 'malfeasance', 'irascible', 'idiosyncrasy', 'foudroyant', 'eudemonic')
    ```

- Create the `score` variable with initial value as `0`, to store the counts of the player's guess.
"""

# Create the 'my_words' tuple and the 'score' variable.
my_words = ('questionnaire', 'unconscious', 'precocious', 'liaison', 'surveillance', 'malfeasance', 'irascible', 'idiosyncrasy', 'foudroyant', 'eudemonic')
score=0

"""---

#### 2. The `shuffler()` Function

- Create the `shuffler()` function which returns a string containing the jumbled letters of a word. E.g., The `shuffler()` function must return either `wims` or `mwsi` or `imsw` etc. for the word `swim`.

- Convert the word into a list of letters using the `list()` function. 

- Use the `shuffle()` function of the `random` module to shuffle the letters from a word. It reorders the items in a Python list. E.g., if a list contains `['s', 'w', 'i', 'm']` items, then the `shuffle()` function will reorder the items as either `['w', 's', 'i', 'm']`, or `['s', 'w', 'm', 'i']` or `['i', 's', 'm', 'w']` etc.

  **Syntax** : `random.shuffle(letters)`, where letters is the variable holding the list of letters.

- Use the `join()` function to convert a list of jumbled letters into a word.

  **Syntax**: `''.join(letters)`, where letters is the variable holding the list of letters.

**Note:** The `random.shuffle()` function does not return a new output. It applies the operation on the original value. Hence, the updated value will replace the original value contained in a variable.
"""

# The 'shuffler()' function to to jumble the letters of a word and form a jumbled word.
import random

def shuffler(word):
  letters = list(word)
  random.shuffle(letters)
  shuffled_word = ''.join(letters)
  return(shuffled_word)

shuffler('swim')

"""---

#### 3. The Remaining Components

Before creating the `for` loop, print the title of the game. Here's the expected output:

```
-----------------------------GUESS A WORD GAME--------------------------------
```

The title is centre justified and the total length of the string is 120.

Prompt a player to enter their name. You should also tell the player, to enter `s` as an input to stop the game midway. 

Then create a `for` loop which should do the following:

1. Display the jumbled letters of a word in uppercase, the part of speech for the word in uppercase and the meaning of the word in uppercase. Here's an example of the expected output:

   `Jumbled Letters: UQSTOAEREIINN`

2. Take input from the user (the guessed word) and convert it into uppercase.

3. If the player's input is `s`, terminate the loop using the `break` keyword.

4. Else if the player's guess is correct, show the `CORRECT!` message and increase player's guess count stored in `score` variable by 1.

5. Else, show the `WRONG!` message. Also, display the correct word. Here's an example of the expected output:

   ```
   Guess the word:
   mealfeseance

   WRONG! 
   Correct word is MALFEASANCE 
   ```

6. Once the player has completed guessing all the words, display `Game Over!` message along with the final score.
  ```
  Game Over!
  Kakashi, Your score is 6.
  ```
"""

# Check whether player's guess is correct or not
# Printing the title 'GUESS A WORD GAME' center aligned
just_len = 120
print("guess a word game".upper().center(just_len, '-'))

# Get the player's name and store in a variable
player_name = input("\nWhat's your name?\n")

# Printing the terminate message 'Type 's' to stop the game at any time.'
print(f"\nType 's' to stop the game at any time.\n{'#' * just_len}") 

# Creating the 'for' loop to shuffle the words in 'my_words' tuple and check the player's guess 
for word in my_words:
  shuffled_word = shuffler(word)
  while shuffled_word == word:
    shuffled_word = shuffler(word)

  # Asking the user to 'Guess the word:' and store the word in a variable
  player_guess = input(f"Guess the correct Word : {shuffled_word.upper()} \n")
  
  # Convert the player guess to upper case using the 'upper()' function.
  player_guess_upper=player_guess.upper()
  # store the result in a variable 'player_guess_upper'
  # Write your code here

  # If player enters 's' then terminate the 'for' loop using 'break' keyword
  if(player_guess_upper=='S'):
    break; 
  # Write your code here
  
  # 'if player_guess_upper == word.upper():' print 'Correct!!' and increase the 'score' by 1.
  # Write your code here
  if player_guess_upper == word.upper():
    print("Correct!!")
    score+=1
  else:
    print(f"WRONG! Correct word is{word.upper()}")

  
  # Else print 'WRONG! Correct word is (correct_word)'
  # Write your code here

"""---

#### 4. Final score

Finally, show `Game Over!` after player has completed guessing the 10 words and show the final score stored in `score` variable.

For Example, if the player had guessed 3 correct words you should be displaying the final score message as,
```
  Game Over!
  Kakashi, Your score is 3.
  ```
"""

# Display 'Game Over' and Final score to the player
print(f"Game Over! \n{player_name}, Your score is {score}.")

"""---

---
"""